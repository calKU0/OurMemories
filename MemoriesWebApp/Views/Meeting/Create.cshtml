@using MemoriesWebApp.Data.Enum
@model MemoriesWebApp.ViewModels.CreateMeetingViewModel

@{
    ViewData["Title"] = "Dodawanie spotkania";
}

<form id="createForm" method="post" class="needs-validation novalidate" asp-action="Create" enctype="multipart/form-data">
    <div class="form-group row">
        <label asp-for="MeetingCity" class="col-sm-2 col-form-label">Miejscowość</label>
        <div class="col-sm-10">
            <select asp-for="MeetingCity" asp-items="@Html.GetEnumSelectList<MeetingCity>()" class="form-control">
                <option>--Wybierz--</option>
            </select>
            <span asp-validation-for="MeetingCity" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row pt-3">
        <label asp-for="DateStart" class="col-sm-2 col-form-label">Data rozpoczęcia</label>
        <div class="col-sm-10">
            <input asp-for="DateStart" class="form-control" id="DateStart" placeholder="Data Rozpoczęcia">
            <span asp-validation-for="DateStart" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row pt-3">
        <label asp-for="DateEnd" class="col-sm-2 col-form-label">Data zakonczenia</label>
        <div class="col-sm-10">
            <input asp-for="DateEnd" class="form-control" id="DateEnd" placeholder="Data zakonczenia">
            <span asp-validation-for="DateEnd" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row pt-3 form-check">
        <label asp-for="Realized" class="form-check-label">
            <div class="col-sm-10">
            <input class="form-check-input" asp-for="Realized" /> Zrealizowano
            <span asp-validation-for="Realized" class="text-danger"></span>
            </div>
        </label>
    </div>
    <div class="form-group row pt-3">
        <label asp-for="Image" class="col-sm-2 col-form-label">Zdjęcie</label>
        <div class="col-sm-10">
            <input asp-for="Image" type="file" class="form-control" id="Image">
        </div>
    </div>
    <div class="form-group row pt-3">
        <img id="imagePreview" style="display:none; max-height: 550px; width: auto;">
        <div class="col-sm-10">
            <form>
                <input type="button" value="Powrót" class="btn btn-outline-secondary" onclick="history.back()">
            </form>
            <a id="save" class="btn btn-primary">Dodaj</a>
        </div>
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

}
<script>
    let cropper;
    let croppedBlob;

    document.getElementById('Image').addEventListener('change', function (event) {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                const img = document.getElementById('imagePreview');
                img.src = e.target.result;
                img.style.display = 'block';

                if (cropper) {
                    cropper.destroy();
                }

                cropper = new Cropper(img, {
                    viewMode: 1,
                    aspectRatio: 1280 / 720,
                    cropBoxResizable: false,
                    cropBoxMovable: true,
                    dragMode: 'move',
                    ready: function () {
                        const containerData = cropper.getContainerData();
                        const aspectRatio = cropper.options.aspectRatio;

                        let cropBoxWidth = 1280;
                        let cropBoxHeight = 720;


                        cropper.setCropBoxData({
                            width: cropBoxWidth,
                            height: cropBoxHeight
                        });
                    }
                });
            };
            reader.readAsDataURL(file);
        }
    });

    document.getElementById('save').addEventListener('click', async function () {
        if (cropper) {
            const canvas = cropper.getCroppedCanvas({
                width: 1280,
                height: 720
            });
            canvas.toBlob(async function (blob) {
                croppedBlob = blob;
                const fileInput = document.getElementById('Image');
                const dataTransfer = new DataTransfer();
                dataTransfer.items.add(new File([croppedBlob], fileInput.files[0].name, { type: fileInput.files[0].type }));
                fileInput.files = dataTransfer.files;

                $('#createForm').submit();
            });
        } else {
            $('#createForm').submit();
        }
    });
</script>